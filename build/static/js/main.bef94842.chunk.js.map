{"version":3,"sources":["wrappers/backendWrapper.js","components/Listing.js","components/PhonebookEntryForm.js","components/PhonebookListingView.js","components/Notification.js","App.js","index.js"],"names":["BACKEND_AXIOS","axios","create","baseURL","process","getErrorStringFromHttpResponseCode","code","errString","Promise","resolve","reject","a","resultObj","success","result","error","method","url","personsAxiosResult","data","console","log","isAxiosError","response","request","message","__personObj","personAddAxiosResult","__id","deleteAxiosResult","Object","keys","length","errCode","status","__updateObj","updateAxiosResult","Button","text","handleOnClick","Fragment","onClick","Listing","name","phoneNumber","id","onDeleteListing","style","border","window","confirm","PhonebookEntryForm","props","handleOnSubmit","handleNewNameChange","handleNewPhoneNumberChange","onSubmit","onChange","type","forwardRef","ref","persons","onReloadFromServer","useState","searchString","setSearchString","isLoading","setIsLoading","clearSearchFilter","event","searchRegex","RegExp","peopleRenderList","filter","person","test","useImperativeHandle","setLoading","loadingFlag","clearPhonebookSearchFilter","target","value","color","reduce","jsx","concat","key","ACCEPTED_NOTIFICATION_TYPES","Set","Notification","notificationClassName","has","className","App","setPersons","newName","setNewName","newPhoneNumber","setNewPhoneNumber","notificationState","setNotificationState","phonebookListingRef","useRef","populatePersonsData","current","backend","personsDataWrapperResponse","Error","showNotification","__notificationState","__timeout","setTimeout","useEffect","nameSet","map","preventDefault","existingPersonEntry","find","updateResult","alert","match","personsEntry","personEntryAdditionResult","personDeleteResult","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bef94842.chunk.js","sourcesContent":["import axios from 'axios';\n\n\nconst BACKEND_AXIOS = axios.create({\n\tbaseURL: process.env.REACT_APP_BACKEND_BASE_URL || `http://localhost:3000/api/persons`\n})\n\nconst getErrorStringFromHttpResponseCode = (code) => {\n\tlet errString = \"SERVER ERROR\";\n\tswitch(code){\n\t\tcase 404:\n\t\terrString = \"RECORD NOT FOUND\";\n\t\tbreak;\n\t}\n\n\treturn errString;\n}\n\n\nconst getPersonsData = () => {\n\treturn new Promise(async(resolve,reject) => {\n\t\tconst resultObj = {\n\t\t\tsuccess: true,\n\t\t\tresult: null,\n\t\t\terror: null\n\t\t}\n\n\t\ttry{\n\n\t\t\tconst personsAxiosResult = await BACKEND_AXIOS({\n\t\t\t\tmethod: \"GET\",\n\t\t\t\turl: '/'\n\t\t\t});\n\n\t\t\tresultObj.success = true;\n\t\t\tresultObj.error = null;\n\t\t\tresultObj.result = personsAxiosResult.data;\n\n\n\n\t\t}catch(e){\n\t\t\tconsole.log(`backendWrapper | getPersonsData | ERROR IN FETCHING PERSONS DATA `,e);\n\t\t\tresultObj.success = false;\n\t\t\tresultObj.result = null;\n\t\t\tif(e.isAxiosError){\n\t\t\t\tif(e.response){\n\t\t\t\t\tresultObj.error = e.response.data\n\t\t\t\t} else if(e.request){\n\t\t\t\t\tresultObj.error = {\n\t\t\t\t\t\tmessage: \"NO RESPONSE FROM SERVER\"\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tresultObj.error = {\n\t\t\t\t\t\tmessage: \"ERROR IN MAKING REQUEST\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresultObj.error = {\n\t\t\t\t\tmessage: e.message || \"UNKNOWN REQUEST ERROR\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tresolve(resultObj)\n\n\t})\n}\n\n\nconst addPersonEntry = (__personObj) => {\n\treturn new Promise(async(resolve,reject) => {\n\n\t\tconst resultObj = {\n\t\t\tsuccess: false,\n\t\t\tresult: null,\n\t\t\terror: null\n\t\t}\n\n\t\ttry{\n\n\t\t\tconst personAddAxiosResult = await BACKEND_AXIOS({\n\t\t\t\tmethod: \"POST\",\n\t\t\t\turl: '/',\n\t\t\t\tdata: __personObj\n\t\t\t})\n\n\t\t\tresultObj.success = true;\n\t\t\tresultObj.result = personAddAxiosResult.data;\n\t\t\tresultObj.error = null;\n\n\t\t}catch(e){\n\t\t\tconsole.log(`backendWrapper | addPersonEntry | ERROR IN FETCHING PERSONS DATA `,e);\n\t\t\tresultObj.success = false;\n\t\t\tresultObj.result = null;\n\t\t\tif(e.isAxiosError){\n\t\t\t\tif(e.response){\n\t\t\t\t\tresultObj.error = e.response.data\n\t\t\t\t} else if(e.request){\n\t\t\t\t\tresultObj.error = {\n\t\t\t\t\t\tmessage: \"NO RESPONSE FROM SERVER\"\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tresultObj.error = {\n\t\t\t\t\t\tmessage: \"ERROR IN MAKING REQUEST\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresultObj.error = {\n\t\t\t\t\tmessage: e.message || \"UNKNOWN REQUEST ERROR\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tresolve(resultObj);\n\t})\n}\n\n\nconst deleteById = (__id) => {\n\n\treturn new Promise(async(resolve,reject) => {\n\t\tconst resultObj = {\n\t\t\tsuccess: false,\n\t\t\tresult: null,\n\t\t\terror: null\n\t\t}\n\n\t\ttry{\n\n\t\t\tconst deleteAxiosResult = await BACKEND_AXIOS({\n\t\t\t\tmethod: \"DELETE\",\n\t\t\t\turl: `/${__id}`\n\t\t\t})\n\n\t\t\tresultObj.success = true;\n\t\t\tresultObj.result = deleteAxiosResult.data;\n\t\t\tresultObj.error = null;\n\t\t}catch(e){\n\t\t\tconsole.log(`backendWrapper | deleteById | ERROR IN FETCHING PERSONS DATA `,e);\n\t\t\tresultObj.success = false;\n\t\t\tresultObj.result = null;\n\t\t\tif(e.isAxiosError){\n\t\t\t\tif(e.response){\n\t\t\t\t\tif(Object.keys(e.response.data).length===0){\n\t\t\t\t\t\tresultObj.error = {\n\t\t\t\t\t\t\terrCode: e.response.status,\n\t\t\t\t\t\t\tmessage: getErrorStringFromHttpResponseCode(e.response.status)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresultObj.error = e.response.data;\n\t\t\t\t\t}\n\t\t\t\t} else if(e.request){\n\t\t\t\t\tresultObj.error = {\n\t\t\t\t\t\tmessage: \"NO RESPONSE FROM SERVER\"\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tresultObj.error = {\n\t\t\t\t\t\tmessage: \"ERROR IN MAKING REQUEST\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresultObj.error = {\n\t\t\t\t\tmessage: e.message || \"UNKNOWN REQUEST ERROR\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tresolve(resultObj);\n\t})\n}\n\n\nconst updateById = (__id,__updateObj) => {\n\n\treturn new Promise(async(resolve,reject) => {\n\n\t\tconst resultObj = {\n\t\t\tsuccess: false,\n\t\t\tresult: null,\n\t\t\terror: null\n\t\t}\n\n\t\ttry{\n\n\t\t\tconst updateAxiosResult = await BACKEND_AXIOS({\n\t\t\t\tmethod: \"PUT\",\n\t\t\t\turl: `${__id}`,\n\t\t\t\tdata: {\n\t\t\t\t\t...__updateObj\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tresultObj.success = true;\n\t\t\tresultObj.result = updateAxiosResult.data;\n\t\t\tresultObj.error = null;\n\n\t\t}catch(e){\n\t\t\tconsole.log(`backendWrapper | updateById | ERROR IN FETCHING PERSONS DATA `,e);\n\t\t\tresultObj.success = false;\n\t\t\tresultObj.result = null;\n\t\t\tif(e.isAxiosError){\n\t\t\t\tif(e.response){\n\t\t\t\t\tif(Object.keys(e.response.data).length===0){\n\t\t\t\t\t\tresultObj.error = {\n\t\t\t\t\t\t\terrCode: e.response.status,\n\t\t\t\t\t\t\tmessage: getErrorStringFromHttpResponseCode(e.response.status)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresultObj.error = e.response.data;\n\t\t\t\t\t}\n\t\t\t\t} else if(e.request){\n\t\t\t\t\tresultObj.error = {\n\t\t\t\t\t\tmessage: \"NO RESPONSE FROM SERVER\"\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tresultObj.error = {\n\t\t\t\t\t\tmessage: \"ERROR IN MAKING REQUEST\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresultObj.error = {\n\t\t\t\t\tmessage: e.message || \"UNKNOWN REQUEST ERROR\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tresolve(resultObj);\n\t})\n}\n\n\nexport default {\n\tgetPersonsData,\n\taddPersonEntry,\n\tdeleteById,\n\tupdateById\n}","import React from \"react\";\n\nconst Button = ({text,handleOnClick}) => {\n\treturn (<React.Fragment>\n\t\t<button onClick={handleOnClick}>{text}</button>\n\t</React.Fragment>)\n}\n\nconst Listing = ({name, phoneNumber, id, onDeleteListing}) => {\n\n\tconst deletePersonEntry = () => {\n\t\tif(window.confirm(`Are you sure you want to delete ${name}?`)){\n\t\t\tonDeleteListing(id)();\n\t\t}\n\t}\n\n\n  return (<div style={{border: \"1px solid black\"}}>\n    Name: {name}<br/>\n    Phone: {phoneNumber}<br />\n    <Button text=\"Delete\" handleOnClick={deletePersonEntry}/>\n  </div>)\n}\n\nexport default Listing;","import React from 'react';\n\n\nconst PhonebookEntryForm = (props) => {\n\tconst {\n\t\thandleOnSubmit,\n\t\thandleNewNameChange,\n\t\thandleNewPhoneNumberChange\n\t} = props;\n\n\treturn (<form onSubmit={handleOnSubmit}>\n        <div>\n          name: <input onChange={handleNewNameChange} />\n        </div>\n        <div>\n        \tPhone Number: <input onChange={handleNewPhoneNumberChange} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>)\n}\n\n\nexport default PhonebookEntryForm;","import React,{useState,forwardRef,useImperativeHandle} from \"react\";\nimport Listing from \"./Listing.js\";\n\n\nconst PhonebookListingView = ({persons,onReloadFromServer,onDeleteListing},ref) => {\n\n\tconst [searchString, setSearchString] = useState(\"\");\n\tconst [isLoading,setIsLoading] = useState(true);\n\n\n\tconst handleSearchStringChange = (event) => {\n\t\tsetSearchString(event.target.value);\n\t}\n\n\tconst clearSearchFilter = (event) => {\n\t\tsetSearchString(\"\");\n\t}\n\n\tconst searchRegex = searchString.length>0 ? new RegExp(searchString,'i') : null;\n\tconst peopleRenderList = persons.filter(person => searchRegex ? searchRegex.test(person.name) : true);\n\n\n\n\tuseImperativeHandle(ref,() => ({\n\t\tsetLoading: (loadingFlag) => {\n\t\t\tsetIsLoading(!!loadingFlag);\n\t\t},\n\t\tclearPhonebookSearchFilter: () => {\n\t\t\tclearSearchFilter();\n\t\t} \n\t}))\n\n\t//have to clear the search filter to handle an edge case\n\tconst handleReloadClick = () => {\n\t\tclearSearchFilter();\n\t\tonReloadFromServer();\n\t}\n\n\n\n\tconsole.log(`PhonebookListingView RENDER | isLoading: ${isLoading}`);\n\tconst phonebookListingJsx = isLoading ? (<div>\n\t\t<h2>Numbers</h2>\n\t\t<p>Loading...</p>\n      </div>) : (<div>\n\t\t<h2>Numbers</h2>\n\t\t<button onClick={handleReloadClick}>Reload from server</button>\n\t\t<div>\n\t\t\tSearch: <input onChange={handleSearchStringChange} value={searchString} /> { searchRegex ? (<React.Fragment>(Filtered Results)<span onClick={clearSearchFilter} style={{color: \"blue\",\"textDecoration\": \"underline\"}}>(Clear)</span></React.Fragment>) : (<React.Fragment></React.Fragment>) }\n\t\t</div>\n\t\t<br />\n      <div>\n        {\t\n          peopleRenderList.length ? peopleRenderList.reduce((jsx,person) => jsx.concat(<React.Fragment key={person.id}><Listing name={person.name} phoneNumber={person.phoneNumber} id={person.id} onDeleteListing={onDeleteListing} /><br/></React.Fragment>),[]) : (<React.Fragment><i>No Results Found</i></React.Fragment>)\n        }\n      </div>\n      </div>);\n\n\treturn phonebookListingJsx\n}\n\nexport default forwardRef(PhonebookListingView);","import React from 'react';\nimport './Notification.css';\n\n\nconst DEFAULT_NOTIFICATION_TYPE = \"inactive\";\nconst ACCEPTED_NOTIFICATION_TYPES = new Set([\n\t\t\"inactive\",\n\t\t\"error\",\n\t\t\"success\"\n\t]);\n\n\nconst Notification = ({type,message}) => {\n\n\n\tconst notificationClassName = `notif-${ACCEPTED_NOTIFICATION_TYPES.has(type) ? type : DEFAULT_NOTIFICATION_TYPE}`;\n\n\treturn (<div className={notificationClassName}>\n\t\t\t{message}\n\t\t</div>)\n}\n\nexport default Notification;","import React,{useState,useEffect,useRef} from 'react';\nimport './App.css';\nimport getCounter from \"./lib/counter.js\";\nimport backend from \"./wrappers/backendWrapper.js\";\nimport {\n  PhonebookEntryForm,\n  PhonebookListingView,\n  Notification\n} from \"./components/index.js\"\n//app is split into several components\n\n\n\n\nconst App = (props) => {\n  const [ persons, setPersons ] = useState([]);\n  const [ newName, setNewName ] = useState('');\n  const [newPhoneNumber,setNewPhoneNumber] = useState('');\n  const [notificationState,setNotificationState] = useState({\n    type: \"inactive\",\n    message: null\n  });\n  \n\n\n  \n\n  const phonebookListingRef = useRef(null);\n\n\n \n\n\n  const populatePersonsData = (async() => {\n    console.log(`Effect fired`);\n    phonebookListingRef.current.setLoading(true);\n    // setTimeout(async() => {\n      try{\n        const personsDataWrapperResponse = await backend.getPersonsData();\n        if(!personsDataWrapperResponse.success){\n          throw new Error(personsDataWrapperResponse.error.message || \"SERVER ERROR\");\n        }\n        setPersons(personsDataWrapperResponse.result);\n      }catch(e){\n        console.error(`ERROR FETCHING DATA FROM SERVER`,e);\n        showNotification({\n              type: \"error\",\n              message: `ERROR FETCHING DATA: ${e.message || \"PROBABALY A SERVER ISSUE\"}`\n            },10000);\n      }\n\n      phonebookListingRef.current.setLoading(false);\n    // },3000)\n  });\n\n  const showNotification = (__notificationState,__timeout) => {\n\n    setNotificationState(__notificationState);\n\n    setTimeout(() => {\n      setNotificationState({\n        type: \"inactive\",\n        message: null\n      })\n    },__timeout>1999 && __timeout<15000 ? __timeout : 3000);\n\n  }\n\n\n\n\n  useEffect(() => {\n    populatePersonsData();\n  },[]);\n\n\n\n  const nameSet = new Set(persons.map(person => person.name));\n  \n  const handleNewNameChange = (event) => {\n    setNewName(event.target.value);\n  }\n\n  const handlePhoneNumberChange = (event) => {\n    setNewPhoneNumber(event.target.value);\n  }\n\n  \n  const submitNewName = (event) => {\n    event.preventDefault();\n\n    (async() => {\n      if(nameSet.has(newName)){\n        if(window.confirm(`${newName} already exists. Update number?`)){\n          try{\n\n            const existingPersonEntry = persons.find(person => person.name===newName);\n            if(!existingPersonEntry){\n              throw new Error(\"PERSON ENTRY NOT FOUND WITH GIVEN NAME\");\n            }\n\n            const updateResult = await backend.updateById(existingPersonEntry.id,{\n              name: newName,\n              phoneNumber: newPhoneNumber\n            })\n\n            if(!updateResult.success){\n              throw new Error(updateResult.error.message || \"SERVER ERROR\");\n            }\n\n\n\n            showNotification({\n              type: \"success\",\n              message: \"ENTRY UPDATED SUCCESSFULLY\"\n            },3000);\n\n            populatePersonsData();\n\n          }catch(e){\n            console.error(`ERROR IN UPDATING PERSON ENTRY - `,e);\n            showNotification({\n              type: \"error\",\n              message: `ERROR IN UPDATING ENTRY: ${e.message || \"PROBABALY A SERVER ISSUE\"}`\n            },3000);\n            populatePersonsData();\n            \n          }\n        }\n\n\n      } else if(newName===\"\"){\n        window.alert(`The name cannot be empty`);\n      } else if(!newPhoneNumber.match(/^\\d+[\\d\\-]*\\d+$/)){\n        window.alert(`Invalid phone number \"${newPhoneNumber}\" - it must only contain digits with hyphens in between being optional`);\n      } else {\n        const personsEntry = {\n          name: newName,\n          phoneNumber: newPhoneNumber\n        }\n        console.log(`NEW ENTRY: `,personsEntry);\n        phonebookListingRef.current.clearPhonebookSearchFilter();\n\n        try{\n          \n          const personEntryAdditionResult = await backend.addPersonEntry(personsEntry);\n          if(!personEntryAdditionResult.success){\n            throw new Error(personEntryAdditionResult.error.message || \"SERVER ERROR\");\n          }\n\n          showNotification({\n            type: \"success\",\n            message: \"NEW PHONEBOOK ENTRY ADDED\"\n          },3000);\n\n          console.log(`NEW ENTRY ADDED`);\n\n        }catch(e){\n          console.error(`ERROR IN MAKING NEW PERSON ENTRY - `,e);\n            showNotification({\n              type: \"error\",\n              message: `ERROR IN MAKING ENTRY: ${e.message || \"PROBABALY A SERVER ISSUE\"}`\n            },3000);\n        }\n\n        populatePersonsData();\n      }\n    })();\n\n  }\n\n  const getDeleteFunctionForId = (__id) => {\n\n    return (async() => {\n\n      try{\n        const personDeleteResult = await backend.deleteById(__id);\n        if(!personDeleteResult.success){\n          console.error(personDeleteResult.error);\n          throw new Error(personDeleteResult.error.message || \"SERVER ERROR\");\n        }\n\n        showNotification({\n          type: \"success\",\n          message: \"ENTRY SUCCESSFULLY DELETED\"\n        },3000);\n\n        populatePersonsData();\n\n      }catch(e){\n        console.error(`ERROR IN DELETING PERSON ENTRY - `,e);\n        showNotification({\n              type: \"error\",\n              message: `ERROR IN DELETING ENTRY: ${e.message || \"PROBABALY A SERVER ISSUE\"}`\n            },3000);\n\n        populatePersonsData();\n      }\n    })\n  }\n\n\n  console.log(`App RENDER`);\n  return (\n    <div>\n      <h2 className=\"App-title\">Phonebook</h2>\n      <Notification type={notificationState.type} message={notificationState.message} />\n      <PhonebookEntryForm handleOnSubmit={submitNewName} handleNewNameChange={handleNewNameChange} handleNewPhoneNumberChange={handlePhoneNumberChange} />\n      <PhonebookListingView ref={phonebookListingRef} onReloadFromServer={populatePersonsData} persons={persons} onDeleteListing={getDeleteFunctionForId} />\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}